version: '3.9'

services:
  backend:
    container_name: backend
    build:
      context: ./backend/
    volumes:
      - ./backend:/backend
      - /static:/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /tmp/acme_challenge:/tmp/acme_challenge
    command: >
      sh -c "
        python ./manage.py migrate --noinput &&
        python ./manage.py collectstatic --noinput &&
        daphne -b 0.0.0.0 -p 8000 conference.asgi:application
      "
    depends_on:
      - db
    env_file:
      - ./.env
    ports:
      - 8000

  frontend:
    build:
      context: ./frontend/
    restart: on-failure
    ports:
      - 3000
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    command: >
      sh -c "npm start"
    env_file:
      - ./.env
    depends_on:
      - backend

  db:
    image: postgres:14
    container_name: postgres_db
    restart: "unless-stopped"
    ports:
      - 5432
    env_file:
    - "./.env"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  redis:
    image: redis:alpine
    restart: always

  celery:
    restart: always
    container_name: celery
    build:
      context: ./backend/
    command: celery -A conference worker -l info
    volumes:
      - ./backend:/backend
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend

  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 8000:8000
      - 443:443
    depends_on:
      - backend
      - frontend
    volumes:
      - ./backend:/backend
      - ./nginx:/etc/nginx/conf.d
      - /static:/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /tmp/acme_challenge:/tmp/acme_challenge

volumes:
  pgdata: {}
